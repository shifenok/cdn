name: NPM & WebP

# 在 Release 发布时 或手动执行

on:
  push:
    branches:
      - main

jobs:
  publish-npm:
    runs-on: ubuntu-latest
    # Clone 仓库
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
      # 安装 Node.js    
      - name: Setup Node
        uses: actions/setup-node@master
        with:
          node-version: "12.x"
          registry-url: https://registry.npmjs.org/
        
      # rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。
      # 安装相关插件，转换图片。
      - name: Install & Convert
        run: |
          npm install -g webp-batch-convert
          cwebp-batch --in rawimg --out webpimg -q 75 -quiet
          mv webpimg/*.webp rawimg/

      - name: 3. 缓存
        uses: actions/cache@v2
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{runner.OS}}-${{hashFiles('**/yarn.lock')}}

      - name: 4. 安装插件
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          export TZ='Asia/Shanghai'
          yarn install

      - name: 5. 生成文件
        run: |
          export TZ='Asia/Shanghai'
          node index.js

      - name: 6. 读取当前版本号
        id: version
        uses: ashley-taylor/read-json-property-action@v1.0
        with:
          path: ./package.json
          property: version
          
      - name: 7. 读取描述文件
        id: description
        uses: juliangruber/read-file-action@v1
        with:
          path: ./description.txt

      - name: 8. 发布NPM包
        run: |
          npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN
          npm publish
        env:
          NPM_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: 9. 创建GitHub Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{steps.version.outputs.value}}
          release_name: v${{steps.version.outputs.value}}
          body: ${{steps.description.outputs.content}}
          draft: false
          prerelease: false
 
      - name: 10. 刷新缓存
        run: |
          curl https://purge.jsdelivr.net/npm/iemotion-pic@latest/dist/name.json
          
      # 删除 rawimg/ 和 webpimg/ 下的所有文件
      - name: Delete Files
        run: |
          rm -rf webpimg/*
          rm -rf rawimg/*
          touch webpimg/.gitkeep
          touch rawimg/.gitkeep
          
      - name: Push
        run: |
          git add -A
          git commit -m "Publish"
          git push origin main
